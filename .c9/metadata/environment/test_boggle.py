{"filter":false,"title":"test_boggle.py","tooltip":"/test_boggle.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":16,"column":19},"end":{"row":16,"column":20},"action":"insert","lines":[" "],"id":144},{"start":{"row":16,"column":20},"end":{"row":16,"column":21},"action":"insert","lines":["t"]},{"start":{"row":16,"column":21},"end":{"row":16,"column":22},"action":"insert","lines":["e"]},{"start":{"row":16,"column":22},"end":{"row":16,"column":23},"action":"insert","lines":["s"]}],[{"start":{"row":16,"column":23},"end":{"row":16,"column":24},"action":"insert","lines":["t"],"id":145}],[{"start":{"row":16,"column":24},"end":{"row":16,"column":25},"action":"insert","lines":[" "],"id":146},{"start":{"row":16,"column":25},"end":{"row":16,"column":26},"action":"insert","lines":["o"]},{"start":{"row":16,"column":26},"end":{"row":16,"column":27},"action":"insert","lines":["f"]}],[{"start":{"row":16,"column":27},"end":{"row":16,"column":28},"action":"insert","lines":[" "],"id":147},{"start":{"row":16,"column":28},"end":{"row":16,"column":29},"action":"insert","lines":["6"]}],[{"start":{"row":16,"column":29},"end":{"row":16,"column":30},"action":"insert","lines":[" "],"id":148},{"start":{"row":16,"column":30},"end":{"row":16,"column":31},"action":"insert","lines":["d"]},{"start":{"row":16,"column":31},"end":{"row":16,"column":32},"action":"insert","lines":["i"]},{"start":{"row":16,"column":32},"end":{"row":16,"column":33},"action":"insert","lines":["m"]},{"start":{"row":16,"column":33},"end":{"row":16,"column":34},"action":"insert","lines":["e"]},{"start":{"row":16,"column":34},"end":{"row":16,"column":35},"action":"insert","lines":["n"]}],[{"start":{"row":16,"column":35},"end":{"row":16,"column":36},"action":"insert","lines":["s"],"id":149},{"start":{"row":16,"column":36},"end":{"row":16,"column":37},"action":"insert","lines":["i"]},{"start":{"row":16,"column":37},"end":{"row":16,"column":38},"action":"insert","lines":["o"]},{"start":{"row":16,"column":38},"end":{"row":16,"column":39},"action":"insert","lines":["n"]},{"start":{"row":16,"column":39},"end":{"row":16,"column":40},"action":"insert","lines":["s"]}],[{"start":{"row":16,"column":40},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":150},{"start":{"row":17,"column":0},"end":{"row":17,"column":8},"action":"insert","lines":["        "]},{"start":{"row":17,"column":8},"end":{"row":17,"column":9},"action":"insert","lines":["\""]},{"start":{"row":17,"column":9},"end":{"row":17,"column":10},"action":"insert","lines":["\""]},{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":["\""]}],[{"start":{"row":17,"column":11},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":151},{"start":{"row":18,"column":0},"end":{"row":18,"column":8},"action":"insert","lines":["        "]},{"start":{"row":18,"column":8},"end":{"row":18,"column":9},"action":"insert","lines":["g"]},{"start":{"row":18,"column":9},"end":{"row":18,"column":10},"action":"insert","lines":["r"]},{"start":{"row":18,"column":10},"end":{"row":18,"column":11},"action":"insert","lines":["i"]},{"start":{"row":18,"column":11},"end":{"row":18,"column":12},"action":"insert","lines":["d"]}],[{"start":{"row":18,"column":12},"end":{"row":18,"column":13},"action":"insert","lines":[" "],"id":152},{"start":{"row":18,"column":13},"end":{"row":18,"column":14},"action":"insert","lines":["="]}],[{"start":{"row":18,"column":14},"end":{"row":18,"column":15},"action":"insert","lines":[" "],"id":153},{"start":{"row":18,"column":15},"end":{"row":18,"column":16},"action":"insert","lines":["b"]},{"start":{"row":18,"column":16},"end":{"row":18,"column":17},"action":"insert","lines":["o"]},{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["o"]}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["o"],"id":154}],[{"start":{"row":18,"column":15},"end":{"row":18,"column":17},"action":"remove","lines":["bo"],"id":155},{"start":{"row":18,"column":15},"end":{"row":18,"column":21},"action":"insert","lines":["boggle"]}],[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["."],"id":156},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"insert","lines":["m"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"insert","lines":["a"]},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"insert","lines":["k"]},{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["e"]}],[{"start":{"row":18,"column":22},"end":{"row":18,"column":26},"action":"remove","lines":["make"],"id":157},{"start":{"row":18,"column":22},"end":{"row":18,"column":33},"action":"insert","lines":["make_grid()"]}],[{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"insert","lines":["2"],"id":158},{"start":{"row":18,"column":33},"end":{"row":18,"column":34},"action":"insert","lines":[","]},{"start":{"row":18,"column":34},"end":{"row":18,"column":35},"action":"insert","lines":["3"]}],[{"start":{"row":18,"column":36},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":159},{"start":{"row":19,"column":0},"end":{"row":19,"column":8},"action":"insert","lines":["        "]},{"start":{"row":19,"column":8},"end":{"row":19,"column":9},"action":"insert","lines":["s"]},{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"insert","lines":["e"]},{"start":{"row":19,"column":10},"end":{"row":19,"column":11},"action":"insert","lines":["l"]},{"start":{"row":19,"column":11},"end":{"row":19,"column":12},"action":"insert","lines":["f"]}],[{"start":{"row":19,"column":12},"end":{"row":19,"column":13},"action":"insert","lines":["."],"id":160}],[{"start":{"row":19,"column":13},"end":{"row":19,"column":14},"action":"insert","lines":["a"],"id":161}],[{"start":{"row":19,"column":13},"end":{"row":19,"column":14},"action":"remove","lines":["a"],"id":162},{"start":{"row":19,"column":13},"end":{"row":19,"column":26},"action":"insert","lines":["assertEqual()"]}],[{"start":{"row":19,"column":25},"end":{"row":19,"column":26},"action":"insert","lines":["l"],"id":163},{"start":{"row":19,"column":26},"end":{"row":19,"column":27},"action":"insert","lines":["e"]},{"start":{"row":19,"column":27},"end":{"row":19,"column":28},"action":"insert","lines":["n"]}],[{"start":{"row":19,"column":25},"end":{"row":19,"column":28},"action":"remove","lines":["len"],"id":164},{"start":{"row":19,"column":25},"end":{"row":19,"column":30},"action":"insert","lines":["len()"]}],[{"start":{"row":19,"column":29},"end":{"row":19,"column":30},"action":"insert","lines":["g"],"id":165}],[{"start":{"row":19,"column":30},"end":{"row":19,"column":31},"action":"insert","lines":["r"],"id":166},{"start":{"row":19,"column":31},"end":{"row":19,"column":32},"action":"insert","lines":["i"]},{"start":{"row":19,"column":32},"end":{"row":19,"column":33},"action":"insert","lines":["d"]}],[{"start":{"row":19,"column":34},"end":{"row":19,"column":35},"action":"insert","lines":[","],"id":167},{"start":{"row":19,"column":35},"end":{"row":19,"column":36},"action":"insert","lines":["6"]}],[{"start":{"row":19,"column":37},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":168},{"start":{"row":20,"column":0},"end":{"row":20,"column":8},"action":"insert","lines":["        "]},{"start":{"row":20,"column":8},"end":{"row":21,"column":0},"action":"insert","lines":["",""]},{"start":{"row":21,"column":0},"end":{"row":21,"column":8},"action":"insert","lines":["        "]},{"start":{"row":21,"column":8},"end":{"row":22,"column":0},"action":"insert","lines":["",""]},{"start":{"row":22,"column":0},"end":{"row":22,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":8},"action":"remove","lines":["    "],"id":169}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":5},"action":"insert","lines":["d"],"id":170},{"start":{"row":22,"column":5},"end":{"row":22,"column":6},"action":"insert","lines":["e"]}],[{"start":{"row":22,"column":6},"end":{"row":22,"column":7},"action":"insert","lines":["f"],"id":171}],[{"start":{"row":22,"column":7},"end":{"row":22,"column":8},"action":"insert","lines":[" "],"id":172},{"start":{"row":22,"column":8},"end":{"row":22,"column":9},"action":"insert","lines":["t"]},{"start":{"row":22,"column":9},"end":{"row":22,"column":10},"action":"insert","lines":["e"]},{"start":{"row":22,"column":10},"end":{"row":22,"column":11},"action":"insert","lines":["s"]},{"start":{"row":22,"column":11},"end":{"row":22,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":[" "],"id":173}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"remove","lines":[" "],"id":174}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":["_"],"id":175},{"start":{"row":22,"column":13},"end":{"row":22,"column":14},"action":"insert","lines":["g"]},{"start":{"row":22,"column":14},"end":{"row":22,"column":15},"action":"insert","lines":["r"]},{"start":{"row":22,"column":15},"end":{"row":22,"column":16},"action":"insert","lines":["i"]},{"start":{"row":22,"column":16},"end":{"row":22,"column":17},"action":"insert","lines":["d"]}],[{"start":{"row":22,"column":17},"end":{"row":22,"column":18},"action":"insert","lines":["_"],"id":176},{"start":{"row":22,"column":18},"end":{"row":22,"column":19},"action":"insert","lines":["c"]},{"start":{"row":22,"column":19},"end":{"row":22,"column":20},"action":"insert","lines":["o"]},{"start":{"row":22,"column":20},"end":{"row":22,"column":21},"action":"insert","lines":["o"]},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"insert","lines":["r"]}],[{"start":{"row":22,"column":22},"end":{"row":22,"column":23},"action":"insert","lines":["d"],"id":177},{"start":{"row":22,"column":23},"end":{"row":22,"column":24},"action":"insert","lines":["i"]},{"start":{"row":22,"column":24},"end":{"row":22,"column":25},"action":"insert","lines":["n"]},{"start":{"row":22,"column":25},"end":{"row":22,"column":26},"action":"insert","lines":["a"]},{"start":{"row":22,"column":26},"end":{"row":22,"column":27},"action":"insert","lines":["t"]},{"start":{"row":22,"column":27},"end":{"row":22,"column":28},"action":"insert","lines":["e"]},{"start":{"row":22,"column":28},"end":{"row":22,"column":29},"action":"insert","lines":["s"]}],[{"start":{"row":22,"column":29},"end":{"row":22,"column":31},"action":"insert","lines":["()"],"id":178}],[{"start":{"row":22,"column":30},"end":{"row":22,"column":31},"action":"insert","lines":["s"],"id":179},{"start":{"row":22,"column":31},"end":{"row":22,"column":32},"action":"insert","lines":["e"]},{"start":{"row":22,"column":32},"end":{"row":22,"column":33},"action":"insert","lines":["l"]},{"start":{"row":22,"column":33},"end":{"row":22,"column":34},"action":"insert","lines":["f"]}],[{"start":{"row":22,"column":35},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":180},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":35},"end":{"row":22,"column":36},"action":"insert","lines":[":"],"id":181}],[{"start":{"row":22,"column":36},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":182},{"start":{"row":23,"column":0},"end":{"row":23,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":23,"column":8},"end":{"row":23,"column":9},"action":"insert","lines":["g"],"id":183},{"start":{"row":23,"column":9},"end":{"row":23,"column":10},"action":"insert","lines":["r"]},{"start":{"row":23,"column":10},"end":{"row":23,"column":11},"action":"insert","lines":["i"]},{"start":{"row":23,"column":11},"end":{"row":23,"column":12},"action":"insert","lines":["d"]},{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["+"]}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"remove","lines":["+"],"id":184}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["="],"id":185}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"remove","lines":["="],"id":186}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":[" "],"id":187},{"start":{"row":23,"column":13},"end":{"row":23,"column":14},"action":"insert","lines":["="]}],[{"start":{"row":23,"column":14},"end":{"row":23,"column":15},"action":"insert","lines":[" "],"id":188},{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":["b"]},{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["o"]}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":17},"action":"remove","lines":["bo"],"id":189},{"start":{"row":23,"column":15},"end":{"row":23,"column":21},"action":"insert","lines":["boggle"]}],[{"start":{"row":23,"column":21},"end":{"row":23,"column":22},"action":"insert","lines":["."],"id":190},{"start":{"row":23,"column":22},"end":{"row":23,"column":23},"action":"insert","lines":["m"]}],[{"start":{"row":23,"column":22},"end":{"row":23,"column":23},"action":"remove","lines":["m"],"id":191},{"start":{"row":23,"column":22},"end":{"row":23,"column":33},"action":"insert","lines":["make_grid()"]}],[{"start":{"row":23,"column":32},"end":{"row":23,"column":33},"action":"insert","lines":["2"],"id":192},{"start":{"row":23,"column":33},"end":{"row":23,"column":34},"action":"insert","lines":[","]}],[{"start":{"row":23,"column":34},"end":{"row":23,"column":35},"action":"insert","lines":[" "],"id":193},{"start":{"row":23,"column":35},"end":{"row":23,"column":36},"action":"insert","lines":["2"]}],[{"start":{"row":23,"column":37},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":194},{"start":{"row":24,"column":0},"end":{"row":24,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":24,"column":8},"end":{"row":24,"column":9},"action":"insert","lines":["s"],"id":195},{"start":{"row":24,"column":9},"end":{"row":24,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":24,"column":8},"end":{"row":24,"column":10},"action":"remove","lines":["se"],"id":196},{"start":{"row":24,"column":8},"end":{"row":24,"column":12},"action":"insert","lines":["self"]}],[{"start":{"row":24,"column":12},"end":{"row":24,"column":13},"action":"insert","lines":["."],"id":197}],[{"start":{"row":24,"column":13},"end":{"row":24,"column":26},"action":"insert","lines":["assertEqual()"],"id":198}],[{"start":{"row":24,"column":25},"end":{"row":24,"column":26},"action":"insert","lines":["l"],"id":199},{"start":{"row":24,"column":26},"end":{"row":24,"column":27},"action":"insert","lines":["e"]},{"start":{"row":24,"column":27},"end":{"row":24,"column":28},"action":"insert","lines":["n"]}],[{"start":{"row":24,"column":25},"end":{"row":24,"column":28},"action":"remove","lines":["len"],"id":200},{"start":{"row":24,"column":25},"end":{"row":24,"column":30},"action":"insert","lines":["len()"]}],[{"start":{"row":24,"column":23},"end":{"row":24,"column":24},"action":"remove","lines":["l"],"id":201},{"start":{"row":24,"column":22},"end":{"row":24,"column":23},"action":"remove","lines":["a"]},{"start":{"row":24,"column":21},"end":{"row":24,"column":22},"action":"remove","lines":["u"]},{"start":{"row":24,"column":20},"end":{"row":24,"column":21},"action":"remove","lines":["q"]},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"remove","lines":["E"]},{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"remove","lines":["t"]}],[{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"insert","lines":["i"],"id":202},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["n"]}],[{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"remove","lines":["n"],"id":203},{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"remove","lines":["i"]}],[{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"insert","lines":["I"],"id":204},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["n"]}],[{"start":{"row":24,"column":23},"end":{"row":24,"column":24},"action":"remove","lines":["n"],"id":205},{"start":{"row":24,"column":22},"end":{"row":24,"column":23},"action":"remove","lines":["e"]},{"start":{"row":24,"column":21},"end":{"row":24,"column":22},"action":"remove","lines":["l"]}],[{"start":{"row":24,"column":22},"end":{"row":24,"column":23},"action":"remove","lines":[")"],"id":206},{"start":{"row":24,"column":21},"end":{"row":24,"column":23},"action":"remove","lines":["()"]}],[{"start":{"row":24,"column":21},"end":{"row":24,"column":22},"action":"insert","lines":["0"],"id":207},{"start":{"row":24,"column":22},"end":{"row":24,"column":23},"action":"insert","lines":[","]},{"start":{"row":24,"column":23},"end":{"row":24,"column":24},"action":"insert","lines":["0"]}],[{"start":{"row":24,"column":24},"end":{"row":24,"column":25},"action":"insert","lines":[")"],"id":208}],[{"start":{"row":24,"column":20},"end":{"row":24,"column":21},"action":"insert","lines":["("],"id":209}],[{"start":{"row":24,"column":26},"end":{"row":24,"column":27},"action":"insert","lines":[")"],"id":210}],[{"start":{"row":24,"column":26},"end":{"row":24,"column":27},"action":"insert","lines":[","],"id":211},{"start":{"row":24,"column":27},"end":{"row":24,"column":28},"action":"insert","lines":["g"]},{"start":{"row":24,"column":28},"end":{"row":24,"column":29},"action":"insert","lines":["r"]},{"start":{"row":24,"column":29},"end":{"row":24,"column":30},"action":"insert","lines":["i"]},{"start":{"row":24,"column":30},"end":{"row":24,"column":31},"action":"insert","lines":["d"]}],[{"start":{"row":24,"column":27},"end":{"row":24,"column":28},"action":"insert","lines":[" "],"id":212}],[{"start":{"row":24,"column":33},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":213},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":33},"action":"insert","lines":["self.asserIn((0,0), grid)"],"id":214}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"remove","lines":["0"],"id":215}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":["1"],"id":216}],[{"start":{"row":25,"column":33},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":217},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":8},"end":{"row":26,"column":33},"action":"insert","lines":["self.asserIn((0,0), grid)"],"id":218}],[{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"remove","lines":["0"],"id":219}],[{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"insert","lines":["1"],"id":220}],[{"start":{"row":26,"column":33},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":221},{"start":{"row":27,"column":0},"end":{"row":27,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":27,"column":8},"end":{"row":27,"column":33},"action":"insert","lines":["self.asserIn((0,0), grid)"],"id":222}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"remove","lines":["0"],"id":223}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":["1"],"id":224}],[{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"remove","lines":["0"],"id":225}],[{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":["1"],"id":226}],[{"start":{"row":27,"column":33},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":227},{"start":{"row":28,"column":0},"end":{"row":28,"column":8},"action":"insert","lines":["        "]},{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"insert","lines":["s"]},{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"insert","lines":["e"]},{"start":{"row":28,"column":10},"end":{"row":28,"column":11},"action":"insert","lines":["l"]}],[{"start":{"row":28,"column":11},"end":{"row":28,"column":12},"action":"insert","lines":["f"],"id":228},{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["."]}],[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["a"],"id":229},{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"insert","lines":["s"]},{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"insert","lines":["e"],"id":230},{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"insert","lines":["r"]},{"start":{"row":28,"column":18},"end":{"row":28,"column":19},"action":"insert","lines":["t"]},{"start":{"row":28,"column":19},"end":{"row":28,"column":20},"action":"insert","lines":["N"]}],[{"start":{"row":28,"column":13},"end":{"row":28,"column":20},"action":"remove","lines":["assertN"],"id":231},{"start":{"row":28,"column":13},"end":{"row":28,"column":26},"action":"insert","lines":["assertNotIn()"]}],[{"start":{"row":28,"column":25},"end":{"row":28,"column":26},"action":"insert","lines":["2"],"id":232},{"start":{"row":28,"column":26},"end":{"row":28,"column":27},"action":"insert","lines":[","]}],[{"start":{"row":28,"column":27},"end":{"row":28,"column":28},"action":"insert","lines":["2"],"id":233}],[{"start":{"row":28,"column":24},"end":{"row":28,"column":25},"action":"insert","lines":["("],"id":234}],[{"start":{"row":28,"column":30},"end":{"row":28,"column":31},"action":"insert","lines":[")"],"id":235}],[{"start":{"row":28,"column":30},"end":{"row":28,"column":31},"action":"insert","lines":[","],"id":236}],[{"start":{"row":28,"column":31},"end":{"row":28,"column":32},"action":"insert","lines":[" "],"id":237},{"start":{"row":28,"column":32},"end":{"row":28,"column":33},"action":"insert","lines":["g"]},{"start":{"row":28,"column":33},"end":{"row":28,"column":34},"action":"insert","lines":["r"]},{"start":{"row":28,"column":34},"end":{"row":28,"column":35},"action":"insert","lines":["i"]}],[{"start":{"row":28,"column":35},"end":{"row":28,"column":36},"action":"insert","lines":["d"],"id":238}],[{"start":{"row":24,"column":24},"end":{"row":24,"column":25},"action":"insert","lines":[" "],"id":239}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":[" "],"id":240}],[{"start":{"row":26,"column":24},"end":{"row":26,"column":25},"action":"insert","lines":[" "],"id":241}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":[" "],"id":242}],[{"start":{"row":28,"column":28},"end":{"row":28,"column":29},"action":"insert","lines":[" "],"id":243}],[{"start":{"row":0,"column":0},"end":{"row":103,"column":4},"action":"remove","lines":["import unittest","import boggle","from string import ascii_uppercase","","class TestBoggle(unittest.TestCase):","    \"\"\"","    our test suit for boggle","    \"\"\"","    def test_can_create_an_empty_grid(self):","        \"\"\"","        test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0,0)","        self.assertEqual(len(grid),0)   ","        ","    def test_grid(self):","        \"\"\"","        make a grid test of 6 dimensions","        \"\"\"","        grid = boggle.make_grid(2,3)","        self.assertEqual(len(grid),6)","        ","        ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)","        ","        ","    def test_grid_is_filled_with_letters(self):","        \"\"\"","        Ensure that each of the coordinates in the grid","        contains letters","        \"\"\"","        grid = boggle.make_grid(2, 3)","        for letter in grid.values():","            self.assertIn(letter, ascii_uppercase)","    ","","    def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\"","        coords = (1, 2)","        neighbours = boggle.neighbours_of_position(coords)","        self.assertIn((0, 1), neighbours)","        self.assertIn((0, 2), neighbours)","        self.assertIn((0, 3), neighbours)","        self.assertIn((1, 1), neighbours)","        self.assertIn((1, 3), neighbours)","        self.assertIn((2, 1), neighbours)","        self.assertIn((2, 2), neighbours)","        self.assertIn((2, 3), neighbours)","    ","","    def test_all_grid_neighbours(self):","        \"\"\"","        Ensure that all of the grid positions have neighbours","        \"\"\"","        grid = boggle.make_grid(2, 2)","        neighbours = boggle.all_grid_neighbours(grid)","        self.assertEqual(len(neighbours), len(grid))","        for pos in grid:","            others = list(grid) # create a new list from the dictionary's keys","            others.remove(pos)","            self.assertListEqual(sorted(neighbours[pos]), sorted(others))","    ","    def test_converting_a_path_to_a_word(self):","        \"\"\"","        Ensure that paths can be converted to words","        \"\"\"","        grid = boggle.make_grid(2, 2)","        oneLetterWord = boggle.path_to_word(grid, [(0, 0)])","        twoLetterWord = boggle.path_to_word(grid, [(0, 0), (1, 1)])","        self.assertEqual(oneLetterWord, grid[(0, 0)])","        self.assertEqual(twoLetterWord, grid[(0, 0)] + grid[(1, 1)])","    ","    def test_search_grid_for_words(self):","        \"\"\"","        Ensure that certain patterns can be found in a `path_to_word`","        \"\"\"","        grid = {(0, 0): 'A', (0, 1): 'B', (1, 0): 'C', (1, 1): 'D'}","        twoLetterWord = 'AB'","        threeLetterWord = 'ABC'","        notThereWord = 'EEE'","        dictionary = [twoLetterWord, threeLetterWord, notThereWord]","","        foundWords = boggle.search(grid, dictionary)","","        self.assertTrue(twoLetterWord in foundWords)","        self.assertTrue(threeLetterWord in foundWords)","        self.assertTrue(notThereWord not in foundWords)","    ","    def test_load_dictionary(self):","        \"\"\"","        Test that the `get_dictionary` function returns a dictionary","        that has a length greater than 0","        \"\"\"","        dictionary = boggle.get_dictionary('words.txt')","        self.assertGreater(len(dictionary), 0)","    "],"id":244},{"start":{"row":0,"column":0},"end":{"row":102,"column":46},"action":"insert","lines":["import unittest","import boggle","from string import ascii_uppercase","","","class TestBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for boggle solver","    \"\"\"","","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0, 0)","        self.assertEqual(len(grid), 0)","    ","    def test_grid_size_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","    ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)","    ","    def test_grid_is_filled_with_letters(self):","        \"\"\"","        Ensure that each of the coordinates in the grid","        contains letters","        \"\"\"","        grid = boggle.make_grid(2, 3)","        for letter in grid.values():","            self.assertIn(letter, ascii_uppercase)","    ","    def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\"","        coords = (1, 2)","        neighbours = boggle.neighbours_of_position(coords)","        self.assertIn((0, 1), neighbours)","        self.assertIn((0, 2), neighbours)","        self.assertIn((0, 3), neighbours)","        self.assertIn((1, 1), neighbours)","        self.assertIn((1, 3), neighbours)","        self.assertIn((2, 1), neighbours)","        self.assertIn((2, 2), neighbours)","        self.assertIn((2, 3), neighbours)","    ","","    def test_all_grid_neighbours(self):","        \"\"\"","        Ensure that all of the grid positions have neighbours","        \"\"\"","        grid = boggle.make_grid(2, 2)","        neighbours = boggle.all_grid_neighbours(grid)","        self.assertEqual(len(neighbours), len(grid))","        for pos in grid:","            others = list(grid) # create a new list from the dictionary's keys","            others.remove(pos)","            self.assertListEqual(sorted(neighbours[pos]), sorted(others))","    ","    def test_converting_a_path_to_a_word(self):","        \"\"\"","        Ensure that paths can be converted to words","        \"\"\"","        grid = boggle.make_grid(2, 2)","        oneLetterWord = boggle.path_to_word(grid, [(0, 0)])","        twoLetterWord = boggle.path_to_word(grid, [(0, 0), (1, 1)])","        self.assertEqual(oneLetterWord, grid[(0, 0)])","        self.assertEqual(twoLetterWord, grid[(0, 0)] + grid[(1, 1)])","    ","    def test_search_grid_for_words(self):","        \"\"\"","        Ensure that certain patterns can be found in a `path_to_word`","        \"\"\"","        grid = {(0, 0): 'A', (0, 1): 'B', (1, 0): 'C', (1, 1): 'D'}","        twoLetterWord = 'AB'","        threeLetterWord = 'ABC'","        notThereWord = 'EEE'","        dictionary = [twoLetterWord, threeLetterWord, notThereWord]","","        foundWords = boggle.search(grid, dictionary)","","        self.assertTrue(twoLetterWord in foundWords)","        self.assertTrue(threeLetterWord in foundWords)","        self.assertTrue(notThereWord not in foundWords)","    ","    def test_load_dictionary(self):","        \"\"\"","        Test that the `get_dictionary` function returns a dictionary","        that has a length greater than 0","        \"\"\"","        dictionary = boggle.get_dictionary('words.txt')","        self.assertGreater(len(dictionary), 0)"]}]]},"ace":{"folds":[],"scrolltop":1146.25,"scrollleft":0,"selection":{"start":{"row":102,"column":46},"end":{"row":102,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"state":"start","mode":"ace/mode/python"}},"timestamp":1574767051446,"hash":"d19322358c9eb55a9bf2b89df6c3bd6425238bf1"}